(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{492:function(t,a,s){"use strict";s.r(a);var e=s(2),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1、回流与重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、回流与重绘"}},[t._v("#")]),t._v(" 1、回流与重绘")]),t._v(" "),a("p",[t._v("浏览器在渲染的时候会经历以下阶段")]),t._v(" "),a("p",[t._v("解析html->生产渲染树->回流->重绘")]),t._v(" "),a("p",[t._v("触发回流一定会触发重绘")]),t._v(" "),a("p",[t._v("以下操作会引起回流：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("添加或删除可见的DOM元素\n\n元素的位置发生变化\n\n元素的尺寸发生变化（包括外边距、内边框、边框大小、高度和宽度等）\n\n内容发生变化，比如文本变化或图片被另一个不同尺寸的图片所替代\n\n页面一开始渲染的时候（这避免不了）\n\n浏览器的窗口尺寸变化（因为回流是根据视口的大小来计算元素的位置和大小的）\n\noffsetTop、offsetLeft、 offsetWidth、offsetHeight、scrollTop、scrollLeft、scrollWidth、scrollHeight、clientTop、clientLeft、clientWidth、clientHeight\n获取一些特定属性的值\n\ngetComputedStyle 方法\n")])])]),a("p",[t._v("以下操作会引起重绘：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("颜色的修改\n\n文本方向的修改\n\n阴影的修改\n")])])]),a("p",[t._v("建议：\n如果想设定元素的样式，通过改变元素的 class 类名 (尽可能在 DOM 树的最里层)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('避免设置多项内联样式\n\n应用元素的动画，使用 position 属性的 fixed 值或 absolute 值\n\n避免使用 table 布局，table 中每个元素的大小以及内容的改动，都会导致整个 table 的重新计算\n\n对于那些复杂的动画，对其设置 position: fixed/absolute，尽可能地使元素脱离文档流，从而减少对其他元素的影响\n\n使用css3硬件加速，可以让transform、opacity、filters这些动画不会引起回流重绘\n\n避免使用 CSS 的 JavaScript 表达式（left:expression(document.body.offsetWidth  - 110 + "px");）\n\n在使用 JavaScript 动态插入多个节点时, 可以使用DocumentFragment. 创建后一次插入. 就能避免多次的渲染性能\n\n\n我们还可以通过通过设置元素属性display: none，将其从页面上去掉，然后再进行后续操作，这些后续操作也不会触发回流与重绘，这个过程称为离线操作\n')])])]),a("h2",{attrs:{id:"_2、ajax-fetch-axios有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、ajax-fetch-axios有什么区别"}},[t._v("#")]),t._v(" 2、ajax fetch axios有什么区别")]),t._v(" "),a("p",[t._v("都是用来进行服务端请求的")]),t._v(" "),a("p",[t._v("ajax是一种技术封装")]),t._v(" "),a("p",[t._v("fetch 是底层api")]),t._v(" "),a("p",[t._v("axios 是一个库")]),t._v(" "),a("h2",{attrs:{id:"_3、防抖和节流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、防抖和节流"}},[t._v("#")]),t._v(" 3、防抖和节流")]),t._v(" "),a("p",[t._v("防抖：多次频繁的操作只执行最后一次")]),t._v(" "),a("p",[t._v("节流：多次频繁的操作有时间有序的执行")]),t._v(" "),a("h2",{attrs:{id:"_4、px-em-rem-vm-vh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、px-em-rem-vm-vh"}},[t._v("#")]),t._v(" 4、px em rem % vm vh")]),t._v(" "),a("p",[t._v("px 是一个逻辑像素")]),t._v(" "),a("p",[t._v("em 基于本身font-size")]),t._v(" "),a("p",[t._v("rem 基于根元素的font-size")]),t._v(" "),a("p",[t._v("% 基于父元素")]),t._v(" "),a("p",[t._v("vm 屏幕宽度的1%")]),t._v(" "),a("p",[t._v("vh 屏幕高度的1%")]),t._v(" "),a("p",[t._v("vmin vm,vh中的最小值")]),t._v(" "),a("p",[t._v("vmax vm,vh中的最大值")]),t._v(" "),a("h2",{attrs:{id:"_5、箭头函数的弊端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、箭头函数的弊端"}},[t._v("#")]),t._v(" 5、箭头函数的弊端")]),t._v(" "),a("p",[t._v("没有 argument")]),t._v(" "),a("p",[t._v("无法bind apply call 改变this指向")]),t._v(" "),a("p",[t._v("在对象中，原型方法中的this不会指向实例")]),t._v(" "),a("p",[t._v("不能为构造函数")]),t._v(" "),a("p",[t._v("回调函数中this指向不正确")]),t._v(" "),a("p",[t._v("vue中 metchods mounted 中this指向不正确")]),t._v(" "),a("h2",{attrs:{id:"_6、简要描述tcp-3次握手与4次挥手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、简要描述tcp-3次握手与4次挥手"}},[t._v("#")]),t._v(" 6、简要描述TCP 3次握手与4次挥手")]),t._v(" "),a("p",[t._v("TCP是连接协议  HTTP是传输协议")]),t._v(" "),a("p",[t._v("1、建立连接 3次握手")]),t._v(" "),a("p",[t._v("客户端呼叫 服务端回答 客户端回复收到 握手结束")]),t._v(" "),a("p",[t._v("2、断开连接 4次挥手")]),t._v(" "),a("p",[t._v("客户端发送关闭需求 服务端回复客户端一些东西需要整理请等待 整理完后回复客户端 客户端收到告诉客户端连接断开 完毕")]),t._v(" "),a("h2",{attrs:{id:"_7、for-in-和-for-of有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、for-in-和-for-of有什么区别"}},[t._v("#")]),t._v(" 7、for in 和 for of有什么区别")]),t._v(" "),a("p",[t._v("for in 遍历获得key")]),t._v(" "),a("p",[t._v("for of 遍历获得value")]),t._v(" "),a("p",[t._v("for in 不能遍历 map set")]),t._v(" "),a("p",[t._v("for of 不能遍历对象")]),t._v(" "),a("h2",{attrs:{id:"_8、for-await-of"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、for-await-of"}},[t._v("#")]),t._v(" 8、for await of")]),t._v(" "),a("p",[t._v("遍历 promise 作用跟promise.all()一样")]),t._v(" "),a("h2",{attrs:{id:"_9、foreach-与-for那个更快"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9、foreach-与-for那个更快"}},[t._v("#")]),t._v(" 9、forEach 与 for那个更快？")]),t._v(" "),a("p",[t._v("for 更快")]),t._v(" "),a("p",[t._v("forEach 有回调函数，内部也有一些算法，在数据量大的情况下效率会低")]),t._v(" "),a("h2",{attrs:{id:"_10、offsetwidth-clienwidth-scrollwidth-有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10、offsetwidth-clienwidth-scrollwidth-有什么区别"}},[t._v("#")]),t._v(" 10、offsetWidth clienWidth scrollWidth 有什么区别")]),t._v(" "),a("p",[t._v("offsetWidth: border + padding +content")]),t._v(" "),a("p",[t._v("clienWidth: padding + content")]),t._v(" "),a("p",[t._v("scrollWidth: padding + 实际内容尺寸")]),t._v(" "),a("h2",{attrs:{id:"_11、html-collection-与-nodelist-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11、html-collection-与-nodelist-的区别"}},[t._v("#")]),t._v(" 11、HTML Collection 与 NodeList 的区别")]),t._v(" "),a("p",[t._v("HTMLCollection是元素集合 children")]),t._v(" "),a("p",[t._v("NodeList是一个节点的集合 (包含文本与注释)  childNodes")]),t._v(" "),a("h2",{attrs:{id:"_12、js严格模式有什么特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12、js严格模式有什么特点"}},[t._v("#")]),t._v(" 12、js严格模式有什么特点")]),t._v(" "),a("p",[t._v("1、全局变量必须声明")]),t._v(" "),a("p",[t._v("2、禁止使用with")]),t._v(" "),a("p",[t._v("3、限制eval,有自己的作用域")]),t._v(" "),a("p",[t._v("4、禁止this指向window")]),t._v(" "),a("p",[t._v("5、函数参数不能重名")]),t._v(" "),a("h2",{attrs:{id:"_13、跨域为什么要发送options请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13、跨域为什么要发送options请求"}},[t._v("#")]),t._v(" 13、跨域为什么要发送options请求？")]),t._v(" "),a("p",[t._v("options 请求就是预检请求，可用于检测服务器允许的 http 方法")]),t._v(" "),a("h2",{attrs:{id:"_14、js-垃圾回收机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14、js-垃圾回收机制"}},[t._v("#")]),t._v(" 14、js 垃圾回收机制")]),t._v(" "),a("p",[t._v("1、回收未被引用的变量")]),t._v(" "),a("p",[t._v("2、 旧 引用计数算法 被引用+1 未被引用-1 为0则回收")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("循环引用将不能回收\n")])])]),a("p",[t._v("3、新 标记清除算法  定期遍历window各个属性 看能不能得到某个属性 得到保留 得不到则删除")]),t._v(" "),a("p",[t._v("4、闭包不是内存泄漏 只是变量不能被垃圾回收机制回收")]),t._v(" "),a("p",[t._v("5、内存泄漏如何检测 谷歌开发者工具 performance")]),t._v(" "),a("p",[t._v("6、内存泄漏的场景有哪些：vue中 未被清除的变量、定时器、未被解除绑定的事件")]),t._v(" "),a("p",[t._v("7、避免内存泄漏的es6语法：weakMap weakSet")]),t._v(" "),a("h2",{attrs:{id:"_15、浏览器与node-js的-事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15、浏览器与node-js的-事件循环"}},[t._v("#")]),t._v(" 15、浏览器与node.js的 事件循环")]),t._v(" "),a("p",[t._v("微任务 promise async")]),t._v(" "),a("p",[t._v("宏任务 setTimerout setInterval 网络请求")]),t._v(" "),a("p",[t._v("浏览器:")]),t._v(" "),a("p",[t._v("1、 先执行 微任务后宏任务")]),t._v(" "),a("p",[t._v("2、微任务在渲染之前触发 宏任务在渲染之后触发 微与宏直接相差一个dom渲染,如果微任务阻塞将不会渲染")]),t._v(" "),a("p",[t._v("3、先执行同步任务 然后异步任务进入队列")]),t._v(" "),a("p",[t._v("4、enent loop ：宏任务队列与微任务队列开始执行，执行完后继续监听任务")]),t._v(" "),a("p",[t._v("node.js:")]),t._v(" "),a("p",[t._v("按优先级执行：")]),t._v(" "),a("p",[t._v("微：")]),t._v(" "),a("p",[t._v("process.nextTick promise async")]),t._v(" "),a("p",[t._v("宏：")]),t._v(" "),a("p",[t._v("setTimerout setInterval Io callback setImmediate")]),t._v(" "),a("h2",{attrs:{id:"_16、如何解决移动端点击事件300ms延迟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16、如何解决移动端点击事件300ms延迟"}},[t._v("#")]),t._v(" 16、如何解决移动端点击事件300ms延迟")]),t._v(" "),a("p",[t._v("旧浏览器打开电脑网页点击的时候会判断是单击还是双击 所以有了延迟")]),t._v(" "),a("p",[t._v("1、fastClick.js库")]),t._v(" "),a("p",[t._v("2、现代浏览器中 meta width=device-width 就不会有延迟了")]),t._v(" "),a("h2",{attrs:{id:"_17、node-js-如何开启多进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17、node-js-如何开启多进程"}},[t._v("#")]),t._v(" 17、node js 如何开启多进程")]),t._v(" "),a("p",[t._v("1、child_process")]),t._v(" "),a("p",[t._v("process.fork()")]),t._v(" "),a("p",[t._v("2、cluster")]),t._v(" "),a("h2",{attrs:{id:"_18、多标签页面如何进行通讯"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18、多标签页面如何进行通讯"}},[t._v("#")]),t._v(" 18、多标签页面如何进行通讯")]),t._v(" "),a("p",[t._v("1、websocket 服务端成本高 无法操作dom")]),t._v(" "),a("p",[t._v("2、监听 storage 事件 只能同域")]),t._v(" "),a("p",[t._v("3、sharedWorker 调试不方便")]),t._v(" "),a("h2",{attrs:{id:"_19、js-bridge-实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19、js-bridge-实现原理"}},[t._v("#")]),t._v(" 19、js-bridge 实现原理")]),t._v(" "),a("p",[t._v("1、APP可以在window全局注册api")]),t._v(" "),a("p",[t._v("2、URL scheme  利用网页的请求，拦截协议后做处理")]),t._v(" "),a("h2",{attrs:{id:"_20、requestidlecallback-与-requestanimationframe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20、requestidlecallback-与-requestanimationframe"}},[t._v("#")]),t._v(" 20、requestIdleCallback 与 requestAnimationFrame")]),t._v(" "),a("p",[t._v("都是渲染帧")]),t._v(" "),a("p",[t._v("requestIdleCallback 会等待执行")]),t._v(" "),a("h2",{attrs:{id:"_21、vue-watch-与-compouted-有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21、vue-watch-与-compouted-有什么区别"}},[t._v("#")]),t._v(" 21、vue watch 与 compouted 有什么区别")]),t._v(" "),a("p",[t._v("1、watch 是监听数据")]),t._v(" "),a("p",[t._v("2、compouted 用于计算产出新数据，有缓存")]),t._v(" "),a("h2",{attrs:{id:"_22、vue组件传参的有几种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22、vue组件传参的有几种方式"}},[t._v("#")]),t._v(" 22、vue组件传参的有几种方式")]),t._v(" "),a("p",[t._v("1、父组件传递子组件 props")]),t._v(" "),a("p",[t._v("子组件传递父组件 $emit")]),t._v(" "),a("p",[t._v("2、自定义事件（消息与广播） 通过第三方库传递")]),t._v(" "),a("p",[t._v("3、$attrs 如果不包含在props emits中，将会传到attrs")]),t._v(" "),a("p",[t._v("4、$refs $parent")]),t._v(" "),a("p",[t._v("5、provide inject")]),t._v(" "),a("p",[t._v("6 、vuex")]),t._v(" "),a("h2",{attrs:{id:"_23、如何确保vue中dom一定会渲染成功"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23、如何确保vue中dom一定会渲染成功"}},[t._v("#")]),t._v(" 23、如何确保vue中DOM一定会渲染成功")]),t._v(" "),a("p",[t._v("在 this.$nextTick中")]),t._v(" "),a("h2",{attrs:{id:"_24、vue2-vue3-react-中-diff算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24、vue2-vue3-react-中-diff算法"}},[t._v("#")]),t._v(" 24、vue2 vue3 react 中 diff算法")]),t._v(" "),a("p",[t._v("普通diff的算法 假设比较A与B A排序循环1次 B排序循环1次 AB比较循环一次 时间复杂度O(n^3)")]),t._v(" "),a("p",[t._v("优化后的：")]),t._v(" "),a("p",[t._v("1、key的作用")]),t._v(" "),a("p",[t._v("react 递增比较")]),t._v(" "),a("p",[t._v("vue2  双端比较")]),t._v(" "),a("p",[t._v("vu3 最长递增子序列")]),t._v(" "),a("h2",{attrs:{id:"_25-token与cookie有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_25-token与cookie有什么区别"}},[t._v("#")]),t._v(" 25 token与cookie有什么区别")]),t._v(" "),a("p",[t._v("cookie:")]),t._v(" "),a("p",[t._v("http是无状态的，每次请求携带cookie已验证身份")]),t._v(" "),a("p",[t._v("服务端可以像客户端设置set-cookie 大小4kb")]),t._v(" "),a("p",[t._v("cookie 默认不跨域共享与传递")]),t._v(" "),a("p",[t._v("token:")]),t._v(" "),a("p",[t._v("cookie是http规范 token是自定义传递")]),t._v(" "),a("p",[t._v("token 需要自己存储")]),t._v(" "),a("p",[t._v("token 没有跨域限制")]),t._v(" "),a("h2",{attrs:{id:"_26-sso"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_26-sso"}},[t._v("#")]),t._v(" 26 sso")]),t._v(" "),a("p",[t._v("用户访问页面A  发现没有ticket就302重定向到sso sso返回登录页面 用户输入账号与密码 登录成功后 sso种下登录信息 并且返回ticket")]),t._v(" "),a("p",[t._v("页面A存储ticket然后拿着ticket与sso校验 sso校验通过 返回业务")]),t._v(" "),a("p",[t._v("访问页面B 发现没有ticket就302重定向到sso sso发现之前种下了登录信息 无需返回登录 直接返回ticket 后面同A")]),t._v(" "),a("h2",{attrs:{id:"_27-http协议与tcp协议、udp协议有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-http协议与tcp协议、udp协议有什么区别"}},[t._v("#")]),t._v(" 27 http协议与tcp协议、udp协议有什么区别")]),t._v(" "),a("p",[t._v("http在应用层 tcp、udp在传输层")]),t._v(" "),a("p",[t._v("tcp协议 三次握手 4次挥手 稳定性高")]),t._v(" "),a("p",[t._v("udp协议 无连接 无断开 不稳定高 效率高  适用于 视频会议 语音通话")]),t._v(" "),a("h2",{attrs:{id:"_28-http协议1-0-2-0的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_28-http协议1-0-2-0的区别"}},[t._v("#")]),t._v(" 28 http协议1.0 2.0的区别")]),t._v(" "),a("p",[t._v("http 1.0 最基本的协议 支持get post")]),t._v(" "),a("p",[t._v("http 1.1 支持缓存 长连接 put delete方法")]),t._v(" "),a("p",[t._v("http 2.0 压缩header 多路请求")]),t._v(" "),a("h2",{attrs:{id:"_29-https"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_29-https"}},[t._v("#")]),t._v(" 29 https")]),t._v(" "),a("p",[t._v("https 是需要ssl/tls认证实现的")]),t._v(" "),a("p",[t._v("证书与各大浏览器厂商有合作，如果免费证书很有可能在浏览器报错（这不是一个私密连接）")]),t._v(" "),a("p",[t._v("首先是 服务端存储证书 证书中包含私钥与公钥 先把公钥传递给客户端 然后客户端用公钥加密一个随机字符串给服务端 服务端用私钥解密出来 非对称加密")]),t._v(" "),a("p",[t._v("然后 经过加密的随机字符串 就变成了公钥 进行通讯了  对称加密")]),t._v(" "),a("p",[t._v("由于客户端需要通过网络获取到服务器的公钥，但是客户端无法识别这个公钥是否是伪造的，所以才会出现黑客伪造的情况。")]),t._v(" "),a("p",[t._v("为了避免出现中间人攻击的隐患，就需要想办法让客户端能够识别其获取到的公钥是服务器发布的正版公钥，还是黑客伪造的虚假公钥，此时就需要引入第三方的公证机构。")]),t._v(" "),a("h2",{attrs:{id:"_30-script-defer-async-有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_30-script-defer-async-有什么区别"}},[t._v("#")]),t._v(" 30 script defer async 有什么区别")]),t._v(" "),a("p",[t._v("script 会经历过下载与执行阶段，正常会在dom渲染的时候阻塞")]),t._v(" "),a("p",[t._v("defer 会在下载阶段与dom渲染并行加载 然后再dom渲染完成后执行js")]),t._v(" "),a("p",[t._v("async 会在下载阶段与dom渲染并行加载,下载完js后马上执行，后再渲染dom")]),t._v(" "),a("h2",{attrs:{id:"_31-preload-prefecth"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_31-preload-prefecth"}},[t._v("#")]),t._v(" 31 preload prefecth")]),t._v(" "),a("p",[t._v("Prefetch预拉取 提前拉取下一个页面的资源")]),t._v(" "),a("p",[t._v("Preload 预加载 主要是为了让某个资源有更高的加载优先级")]),t._v(" "),a("p",[t._v("dns-prefetch 是尝试在请求资源之前解析域名")]),t._v(" "),a("p",[t._v("preconnect (预连接) 是会建立与服务器的连接。将两者结合起来可提供进一步减少跨域请求的感知延迟的机会")]),t._v(" "),a("h2",{attrs:{id:"_32前端攻击手段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_32前端攻击手段"}},[t._v("#")]),t._v(" 32前端攻击手段")]),t._v(" "),a("p",[t._v("xss csrf 点击劫持 DDOS攻击 SQL注入")]),t._v(" "),a("h2",{attrs:{id:"_33-一个url的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_33-一个url的过程"}},[t._v("#")]),t._v(" 33 一个url的过程")]),t._v(" "),a("p",[t._v("DNS解析 建立tcp连接 http连接 得到html源码")]),t._v(" "),a("p",[t._v("解析html加载里面的静态资源")]),t._v(" "),a("h2",{attrs:{id:"_34-首屏优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_34-首屏优化"}},[t._v("#")]),t._v(" 34 首屏优化")]),t._v(" "),a("p",[t._v("1、路由懒加载")]),t._v(" "),a("p",[t._v("2、ssr")]),t._v(" "),a("p",[t._v("3、app预取")]),t._v(" "),a("p",[t._v("4、分页")]),t._v(" "),a("p",[t._v("5、图片懒加载")]),t._v(" "),a("p",[t._v("6、hybrid 先下载到app内部 用file协议打开")]),t._v(" "),a("h2",{attrs:{id:"_35-vue优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_35-vue优化"}},[t._v("#")]),t._v(" 35 vue优化")]),t._v(" "),a("p",[t._v("v-show v-if")]),t._v(" "),a("p",[t._v("compouted计算")]),t._v(" "),a("p",[t._v("路由/组件 懒加载")]),t._v(" "),a("p",[t._v("for key")]),t._v(" "),a("p",[t._v("keep-live")]),t._v(" "),a("p",[t._v("ssr")]),t._v(" "),a("h2",{attrs:{id:"_36后端返回10w数据怎么处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_36后端返回10w数据怎么处理"}},[t._v("#")]),t._v(" 36后端返回10w数据怎么处理")]),t._v(" "),a("p",[t._v("1、nodejs中间解决")]),t._v(" "),a("p",[t._v("2、虚拟列表")]),t._v(" "),a("p",[t._v("3、 setTimeout 进行分页渲染 requestAnimationFrame createDocumentFragment")]),t._v(" "),a("h2",{attrs:{id:"_37-如何监听vue组件报错"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_37-如何监听vue组件报错"}},[t._v("#")]),t._v(" 37 如何监听vue组件报错")]),t._v(" "),a("p",[t._v("1、window.onerror是监听js报错 无法捕获 try catch")]),t._v(" "),a("p",[t._v("2、errorCaptured vue监听 return false 不会向上传播 不能监听异步")]),t._v(" "),a("p",[t._v("3、errorHandler 与window.onerror 互斥 不能监听异步")]),t._v(" "),a("h2",{attrs:{id:"_38-前端性能指标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_38-前端性能指标"}},[t._v("#")]),t._v(" 38 前端性能指标")]),t._v(" "),a("p",[t._v("fp fcp fmp dcl lcp load")]),t._v(" "),a("h2",{attrs:{id:"_39-react优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_39-react优化"}},[t._v("#")]),t._v(" 39 react优化")]),t._v(" "),a("p",[t._v("1、循环使用key")]),t._v(" "),a("p",[t._v("2、使用fragment")]),t._v(" "),a("p",[t._v("3、jsx中不定义函数 不写 bind this")]),t._v(" "),a("p",[t._v("4、shouldComponentUpdate 判断是否要更新 或者 React.pureComponetn 函数组件用 react.mome")]),t._v(" "),a("p",[t._v("5、异步组件 路由懒加载 ssr")]),t._v(" "),a("h1",{attrs:{id:"编写代码相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写代码相关"}},[t._v("#")]),t._v(" 编写代码相关")]),t._v(" "),a("p",[t._v("1、concat 连接数组扁平化   会比push快")]),t._v(" "),a("p",[t._v("2、Object.proptype.toString([])  typeof只能为原始类型与 function object")]),t._v(" "),a("p",[t._v("3、promise.then 会交替执行 如果返回新的promise 会慢两拍")]),t._v(" "),a("p",[t._v("4、setState 是异步更新 合并更新的")]),t._v(" "),a("p",[t._v("但是在settimout ajax回调 dom监听事件 是同步更新的 也是合并更新的")]),t._v(" "),a("p",[t._v("setState 的回调函数写法 也是合并更新的")]),t._v(" "),a("h2",{attrs:{id:"设计一个前端统计sdk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计一个前端统计sdk"}},[t._v("#")]),t._v(" 设计一个前端统计sdk")]),t._v(" "),a("p",[t._v("1、pv访问量")]),t._v(" "),a("p",[t._v("2、用户点击行为")]),t._v(" "),a("p",[t._v("3、错误  window.onerror")]),t._v(" "),a("p",[t._v("4、性能 performance.timing")]),t._v(" "),a("p",[t._v("第一步，需要产品ID")]),t._v(" "),a("p",[t._v("第二步,pv url不能重复")]),t._v(" "),a("p",[t._v("第三步，发送数据使用img 可以跨域 兼容性好")]),t._v(" "),a("h2",{attrs:{id:"soure-map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#soure-map"}},[t._v("#")]),t._v(" soure-map")]),t._v(" "),a("h2",{attrs:{id:"spa-与-mpa-如何选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spa-与-mpa-如何选择"}},[t._v("#")]),t._v(" spa 与 mpa 如何选择")]),t._v(" "),a("h2",{attrs:{id:"低代码平台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#低代码平台"}},[t._v("#")]),t._v(" 低代码平台")]),t._v(" "),a("p",[t._v("1、点击保存的时候 发送给后端的数据格式怎么设计？ 因为是有序的 设计成数组  vnode")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("page")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("title")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'标题'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("setting")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 其他扩展信息：多语言，微信分享的配置，其他 */")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 当前页面的属性设置，背景 */")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("components")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// components 有序，数组")]),t._v("\n\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'文本1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// type")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("style")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("fontSize")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'16px'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("attrs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 其他属性 */")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("text")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'文本1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 文本2")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'图片1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'image'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("style")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100px'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("attrs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx.png'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 问题2 Vuex 画布与组件同步")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于记录当前选中的组件，记录 id 即可")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("activeComponentId")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x3'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);